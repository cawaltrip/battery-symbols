[project]
name = "battery-symbols"
version = "0.1.0"
description = "Battery symbols and font"
authors = [
    {name = "Chris Waltrip",email = "chris@walt.rip"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9,<4.0"
dependencies = [
    "svg-py (>=1.6.0,<2.0.0)",
    "fonttools (>=4.58.0,<5.0.0)",
    "mistletoe (>=1.4.0,<2.0.0)",
    "svgwrite (>=1.4.3,<2.0.0)",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
packages = [
  { include = "battery_symbols", from = "src" }
]

[tool.poetry.scripts]
generate-icons   = "battery_symbols.generate:main"
normalize-icons  = "battery_symbols.normalize:main"
create-font      = "battery_symbols.create:main"

[tool.poetry.group.dev.dependencies]
commitizen = "^4.7.2"
pre-commit = "^4.2.0"
mypy = "^1.15.0"
pyupgrade = "^3.20.0"
ruff = "^0.11.11"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pycache__",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "src/battery_symbols/__init__.py"
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py313"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "W", "C901"]
ignore = ["E203", "E501", "E701", "W503"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.mypy]
# your minimum supported Python
python_version = 3.9
# relax missing-stub errors
ignore_missing_imports = true
# if you want “strict” mode you can enable more here:
# strict = true
